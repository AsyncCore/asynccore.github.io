DELIMITER //

-- UPDATE GENERAL - COALESCE ADMITE NULL PARA DEJAR EL CAMPO SIN UPDATEAR
DROP PROCEDURE IF EXISTS UPDATE_USER;
CREATE PROCEDURE UPDATE_USER(
    IN P_USER_ID INT,
    IN P_USERNAME VARCHAR(255),
    IN P_PASSWORD VARCHAR(255),
    IN P_EMAIL VARCHAR(255),
    IN P_AVATAR VARCHAR(255),
    IN P_FIRMA VARCHAR(255),
    IN P_TIPO_USUARIO INT
)
BEGIN
    UPDATE USERS
    SET USERNAME  = COALESCE(P_USERNAME, USERNAME),
        PASSWORD  = COALESCE(P_PASSWORD, PASSWORD),
        EMAIL     = COALESCE(P_EMAIL, EMAIL),
        AVATAR    = COALESCE(P_AVATAR, AVATAR),
        FIRMA     = COALESCE(P_FIRMA, FIRMA),
        USER_TYPE = COALESCE(P_TIPO_USUARIO, USER_TYPE)
    WHERE USER_ID = P_USER_ID;
END;

-- UPDATE POR CAMPO MAIL O USERNAME - COALESCE ADMITE NULL PARA DEJAR EL CAMPO SIN UPDATEAR
DROP PROCEDURE IF EXISTS UPDATE_USERNAME_AND_USERMAIL;
CREATE PROCEDURE UPDATE_USERNAME_AND_USERMAIL(
    IN P_USER_ID INT,
    IN P_USERNAME VARCHAR(255),
    IN P_EMAIL VARCHAR(255)
)
BEGIN
    UPDATE USERS
    SET USERNAME = COALESCE(P_USERNAME, USERNAME), EMAIL = COALESCE(P_EMAIL, EMAIL)
    WHERE USER_ID = P_USER_ID;
END;

-- UPDATE DE PASSWORD
DROP PROCEDURE IF EXISTS UPDATE_PASSWORD;
CREATE PROCEDURE UPDATE_PASSWORD(
    IN P_USER_ID INT,
    IN P_PASSWORD VARCHAR(255)
)
BEGIN
    UPDATE USERS SET PASSWORD = P_PASSWORD WHERE USER_ID = P_USER_ID;
END;

-- CAMBIAR PASSWORD
CREATE PROCEDURE CHANGE_PASSWORD(
    IN P_USER_ID INT,
    IN P_NEW_PASSWORD VARCHAR(255),
    IN P_OLD_PASSWORD VARCHAR(255)
)
BEGIN
    IF P_OLD_PASSWORD <> P_NEW_PASSWORD THEN
        UPDATE USERS
        SET PASSWORD = P_NEW_PASSWORD
        WHERE USER_ID = P_USER_ID;
    END IF;
END;

-- UPDATE DE AVATAR Y FIRMA - COALESCE ADMITE NULL PARA DEJAR EL CAMPO SIN UPDATEAR
DROP PROCEDURE IF EXISTS UPDATE_AVATAR_AND_SIGNATURE;
CREATE PROCEDURE UPDATE_AVATAR_AND_SIGNATURE(
    IN P_USER_ID INT,
    IN P_AVATAR VARCHAR(255),
    IN P_FIRMA VARCHAR(255)
)
BEGIN
    UPDATE USERS SET AVATAR = COALESCE(P_AVATAR, AVATAR), FIRMA = COALESCE(P_FIRMA, FIRMA) WHERE USER_ID = P_USER_ID;
END;

-- UPDATE DE TIPO DE USUARIO - SOLO ADMINS
DROP PROCEDURE IF EXISTS UPDATE_USER_TYPE;
CREATE PROCEDURE UPDATE_USER_TYPE(
    IN P_USER_ID INT,
    IN P_TIPO_USUARIO INT
)
BEGIN
    UPDATE USERS SET USER_TYPE = P_TIPO_USUARIO WHERE USER_ID = P_USER_ID;
END;

DELIMITER ;